apiVersion: apps/v1
kind: Deployment
metadata:
  name: metabolic-ninja-staging
spec:
  selector:
    matchLabels:
      app: metabolic-ninja
      env: staging
  replicas: 1
  template:
    metadata:
      labels:
        app: metabolic-ninja
        env: staging
    spec:
      containers:
      - name: web
        image: gcr.io/dd-decaf-cfbf6/metabolic-ninja:devel
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        env:
        - name: ENVIRONMENT
          value: production
        - name: SCRIPT_NAME
          value: /pathways-caffeine
        - name: FLASK_APP
          value: src/metabolic_ninja/wsgi.py
        - name: ALLOWED_ORIGINS
          value: https://caffeine.dd-decaf.eu,http://localhost:4200
        - name: REDIS_HOST
          value: localhost:6379
        - name: MODEL_STORAGE_API
          value: https://api-staging.dd-decaf.eu/mstorage
        - name: IAM_API
          value: https://api-staging.dd-decaf.eu/iam
        - name: POSTGRES_HOST
          value: localhost
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_DB_NAME
          value: metabolic_ninja
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: metabolic-ninja-staging
              key: SECRET_KEY
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: metabolic-ninja-staging
              key: SENTRY_DSN
        - name: POSTGRES_USERNAME
          valueFrom:
            secretKeyRef:
              name: metabolic-ninja-staging
              key: POSTGRES_USERNAME
        - name: POSTGRES_PASS
          valueFrom:
            secretKeyRef:
              name: metabolic-ninja-staging
              key: POSTGRES_PASS
        command: ["/bin/sh", "-c"]
        args: ["flask db upgrade && gunicorn -c gunicorn.py metabolic_ninja.wsgi:app"]
        readinessProbe:
          httpGet:
            path: /pathways-caffeine/healthz
            port: 8000
          initialDelaySeconds: 5
        resources:
          requests:
            cpu: "10m"
          limits:
            cpu: "2000m"
      - name: worker
        image: gcr.io/dd-decaf-cfbf6/metabolic-ninja:devel
        imagePullPolicy: Always
        env:
        - name: REDIS_HOST
          value: localhost:6379
        - name: C_FORCE_ROOT
          value: "1"
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: metabolic-ninja-staging
              key: SENTRY_DSN
        - name: POSTGRES_HOST
          value: localhost
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_DB_NAME
          value: metabolic_ninja
        - name: POSTGRES_USERNAME
          valueFrom:
            secretKeyRef:
              name: metabolic-ninja-staging
              key: POSTGRES_USERNAME
        - name: POSTGRES_PASS
          valueFrom:
            secretKeyRef:
              name: metabolic-ninja-staging
              key: POSTGRES_PASS
        - name: SENDGRID_API_KEY
          valueFrom:
            secretKeyRef:
              name: metabolic-ninja-staging
              key: SENDGRID_API_KEY
        - name: IAM_API
          value: http://iam-staging/iam
        - name: WAREHOUSE_API
          value: http://warehouse-staging/warehouse
        command: ["celery", "-A", "metabolic_ninja.tasks", "worker", "--loglevel=info"]
        resources:
          requests:
            cpu: "10m"
          limits:
            cpu: "4000m"
      - name: redis
        image: redis:latest
        ports:
        - containerPort: 6379
        command: ["redis-server", "--appendonly", "yes"]
        resources:
          requests:
            cpu: "10m"
          limits:
            cpu: "2000m"
        volumeMounts:
          - mountPath: "/data"
            name: metabolic-ninja-staging
      - name: flower
        image: gcr.io/dd-decaf-cfbf6/metabolic-ninja:devel
        imagePullPolicy: Always
        ports:
        - containerPort: 5555
        env:
        - name: REDIS_HOST
          value: localhost:6379
        - name: FLOWER_USERNAME
          valueFrom:
            secretKeyRef:
              name: metabolic-ninja-staging
              key: FLOWER_USERNAME
        - name: FLOWER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: metabolic-ninja-staging
              key: FLOWER_PASSWORD
        command: ["celery", "flower", "-A", "metabolic_ninja", "--broker=redis://localhost:6379/0", "--url_prefix=/metabolic-ninja", "--basic_auth=$(FLOWER_USERNAME):$(FLOWER_PASSWORD)"]
        resources:
          requests:
            cpu: "10m"
          limits:
            cpu: "2000m"
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy", "-instances=dd-decaf-cfbf6:europe-west1:dd-decaf=tcp:5432", "-credential_file=/secrets/cloudsql/credentials.json"]
        resources:
          requests:
            cpu: "10m"
          limits:
            cpu: "2000m"
        volumeMounts:
          - name: cloudsql-instance-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
      volumes:
        - name: metabolic-ninja-staging
          persistentVolumeClaim:
           claimName: metabolic-ninja-staging
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
