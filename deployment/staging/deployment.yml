apiVersion: apps/v1
kind: Deployment
metadata:
  name: metabolic-ninja-staging
spec:
  selector:
    matchLabels:
      app: metabolic-ninja
      env: staging
  replicas: 1
  template:
    metadata:
      labels:
        app: metabolic-ninja
        env: staging
    spec:
      initContainers:
      - name: migrate
        image: gcr.io/dd-decaf-cfbf6/metabolic-ninja:devel
        imagePullPolicy: Always
        env:
        - name: ENVIRONMENT
          value: production
        - name: SCRIPT_NAME
          value: /metabolic-ninja
        - name: FLASK_APP
          value: src/metabolic_ninja/wsgi.py
        - name: ALLOWED_ORIGINS
          value: https://caffeine.dd-decaf.eu,https://staging.dd-decaf.eu,http://localhost:4200
        - name: REDIS_HOST
          value: localhost:6379
        - name: MODEL_STORAGE_API
          value: https://model-storage-staging/model-storage
        - name: IAM_API
          value: http://iam-staging/iam
        - name: WAREHOUSE_API
          value: http://warehouse-staging/warehouse
        - name: POSTGRES_HOST
          value: cloudsql-proxy
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_DB_NAME
          value: metabolic_ninja_staging
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: metabolic-ninja-staging
              key: SECRET_KEY
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: metabolic-ninja-staging
              key: SENTRY_DSN
        - name: POSTGRES_USERNAME
          valueFrom:
            secretKeyRef:
              name: metabolic-ninja-staging
              key: POSTGRES_USERNAME
        - name: POSTGRES_PASS
          valueFrom:
            secretKeyRef:
              name: metabolic-ninja-staging
              key: POSTGRES_PASS
        command: ["flask", "db", "upgrade"]
        resources:
          requests:
            cpu: "10m"
          limits:
            cpu: "2000m"
      containers:
      - name: web
        image: gcr.io/dd-decaf-cfbf6/metabolic-ninja:devel
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        env:
        - name: ENVIRONMENT
          value: production
        - name: SCRIPT_NAME
          value: /metabolic-ninja
        - name: FLASK_APP
          value: src/metabolic_ninja/wsgi.py
        - name: ALLOWED_ORIGINS
          value: https://caffeine.dd-decaf.eu,https://staging.dd-decaf.eu,http://localhost:4200
        - name: REDIS_HOST
          value: localhost:6379
        - name: MODEL_STORAGE_API
          value: https://model-storage-staging/model-storage
        - name: IAM_API
          value: http://iam-staging/iam
        - name: WAREHOUSE_API
          value: http://warehouse-staging/warehouse
        - name: POSTGRES_HOST
          value: cloudsql-proxy
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_DB_NAME
          value: metabolic_ninja_staging
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: metabolic-ninja-staging
              key: SECRET_KEY
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: metabolic-ninja-staging
              key: SENTRY_DSN
        - name: POSTGRES_USERNAME
          valueFrom:
            secretKeyRef:
              name: metabolic-ninja-staging
              key: POSTGRES_USERNAME
        - name: POSTGRES_PASS
          valueFrom:
            secretKeyRef:
              name: metabolic-ninja-staging
              key: POSTGRES_PASS
        command: ["gunicorn", "-c", "gunicorn.py", "metabolic_ninja.wsgi:app"]
        readinessProbe:
          httpGet:
            path: /metabolic-ninja/healthz
            port: 8000
          initialDelaySeconds: 5
        resources:
          requests:
            cpu: "10m"
          limits:
            cpu: "2000m"
      - name: worker
        image: gcr.io/dd-decaf-cfbf6/metabolic-ninja:devel
        imagePullPolicy: Always
        env:
        - name: RABBITMQ_HOST
          value: localhost
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: metabolic-ninja-staging
              key: SENTRY_DSN
        - name: POSTGRES_HOST
          value: cloudsql-proxy
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_DB_NAME
          value: metabolic_ninja
        - name: POSTGRES_USERNAME
          valueFrom:
            secretKeyRef:
              name: metabolic-ninja-staging
              key: POSTGRES_USERNAME
        - name: POSTGRES_PASS
          valueFrom:
            secretKeyRef:
              name: metabolic-ninja-staging
              key: POSTGRES_PASS
        - name: SENDGRID_API_KEY
          valueFrom:
            secretKeyRef:
              name: metabolic-ninja-staging
              key: SENDGRID_API_KEY
        command: ["python", "-m", "metabolic_ninja.worker.main"]
        resources:
          requests:
            cpu: "10m"
          limits:
            cpu: "4000m"
      - name: rabbitmq
        image: rabbitmq:3.7
        ports:
        - containerPort: 5672
        resources:
          requests:
            cpu: "10m"
          limits:
            cpu: "2000m"
        # volumeMounts:
        #   - mountPath: "/var/lib/rabbitmq"
        #     name: metabolic-ninja-staging
      - name: disk-usage
        image: gcr.io/dd-decaf-cfbf6/metabolic-ninja:devel
        command: ["python", "-m", "disk_usage.main"]
        env:
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: metabolic-ninja-staging
              key: SENTRY_DSN
        resources:
          requests:
            cpu: "10m"
          limits:
            cpu: "2000m"
        volumeMounts:
          - mountPath: "/var/lib/rabbitmq"
            name: metabolic-ninja-staging
      volumes:
        - name: metabolic-ninja-staging
          persistentVolumeClaim:
           claimName: metabolic-ninja-staging
