version: "3.1"
services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    image: gcr.io/dd-decaf-cfbf6/metabolic-ninja:${IMAGE_TAG:-latest}
    depends_on:
    - redis
    - postgres
    networks:
      default:
      DD-DeCaF:
        aliases:
        - metabolic-ninja
    ports:
    - "${API_PORT:-8000}:8000"
    volumes:
    - ".:/app"
    environment:
    - ENVIRONMENT=${ENVIRONMENT:-development}
    - FLASK_APP=src/metabolic_ninja/wsgi.py
    - SCRIPT_NAME=${SCRIPT_NAME}
    - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost:4200}
    - SENTRY_DSN=${SENTRY_DSN}
    - REDIS_HOST=${REDIS_HOST:-redis:6379}
    - MODEL_STORAGE_API=${MODEL_STORAGE_API:-https://api-staging.dd-decaf.eu/mstorage}
    - POSTGRES_HOST=${POSTGRES_HOST:-postgres}
    - POSTGRES_PORT=${POSTGRES_PORT:-5432}
    - POSTGRES_DB_NAME=${POSTGRES_DB_NAME:-metabolic_ninja}
    - POSTGRES_USERNAME=${POSTGRES_USERNAME:-postgres}
    - POSTGRES_PASS=${POSTGRES_PASS}
    - IAM_API=${IAM_API:-https://api-staging.dd-decaf.eu/iam}
    - WAREHOUSE_API=${WAREHOUSE_API:-https://api-staging.dd-decaf.eu/warehouse}
    - WORKER_CONCURRENCY=${WORKER_CONCURRENCY:-1}
    command: gunicorn -c gunicorn.py metabolic_ninja.wsgi:app

  worker:
    image: gcr.io/dd-decaf-cfbf6/metabolic-ninja:${IMAGE_TAG:-latest}
    depends_on:
    - redis
    networks:
      default:
      DD-DeCaF:
        aliases:
        - metabolic-ninja-worker
    volumes:
    - ".:/app"
    environment:
    - SENTRY_DSN=${SENTRY_DSN}
    - REDIS_HOST=${REDIS_HOST:-redis:6379}
    - POSTGRES_HOST=${POSTGRES_HOST:-postgres}
    - POSTGRES_PORT=${POSTGRES_PORT:-5432}
    - POSTGRES_DB_NAME=${POSTGRES_DB_NAME:-metabolic_ninja}
    - POSTGRES_USERNAME=${POSTGRES_USERNAME:-postgres}
    - POSTGRES_PASS=${POSTGRES_PASS}
    - SENDGRID_API_KEY=${SENDGRID_API_KEY}
    - C_FORCE_ROOT=1
    - WORKER_CONCURRENCY=${WORKER_CONCURRENCY:-1}
    command: celery -A metabolic_ninja.tasks worker --loglevel=info

  flower:
    image: gcr.io/dd-decaf-cfbf6/metabolic-ninja:${IMAGE_TAG:-latest}
    depends_on:
    - redis
    networks:
      default:
    ports:
    - "${FLOWER_PORT:-5555}:5555"
    volumes:
    - ".:/app"
    environment:
    - REDIS_HOST=${REDIS_HOST:-redis:6379}
    - WORKER_CONCURRENCY=${WORKER_CONCURRENCY:-1}
    command: celery flower -A metabolic_ninja --broker=redis://redis:6379/0

  redis:
    image: redis
    networks:
    - default
    ports:
      - "${REDIS_PORT:-6379}:6379"
    command: redis-server --appendonly yes

  postgres:
    image: postgres:9.6-alpine
    volumes:
      - /var/lib/postgresql/data
    networks:
    - default
    ports:
    - "${POSTGRES_PORT:-5432}:5432"

# Additional services that the `web` service `depends_on` should usually only
# be on the default network and not exposed on the general network, i.e.,
# networks:
#   - default

networks:
  DD-DeCaF:
    external: true
